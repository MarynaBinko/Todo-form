(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function e(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(o){if(o.ep)return;o.ep=!0;const s=e(o);fetch(o.href,s)}})();const c="http://localhost:3000/todos",d=document.querySelector(".todo-form"),a=document.querySelector(".list");d.addEventListener("submit",f);a.addEventListener("click",h);a.addEventListener("click",p);async function i(t,r={}){const e=await fetch(t,r);if(!e.ok)throw new Error(e.statusText);return await e.json()}i(c).then(t=>{a.innerHTML=u(t)}).catch(t=>console.error("Error fetching todos:",t));function u(t){return t.map(({id:r,title:e,completed:n})=>`
      <li data-id="${r}" class="list-item">
        <input type="checkbox" class="list-checkbox" ${n&&"checked"}>
        <h2 class="list-title">${e}</h2>
        <button class="list-btn">X</button>
      </li>
    `).join("")}async function f(t){t.preventDefault();const{todo:r}=t.currentTarget.elements;try{const e={title:r.value,completed:!1};await i(c,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});const n=await i(c);a.innerHTML=u(n),d.reset()}catch(e){console.error("Failed to add task:",e.message)}}async function p(t){if(!t.target.classList.contains("list-checkbox"))return;t.preventDefault();const e=t.target.closest(".list-item").dataset.id;try{await i(`${c}/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({completed:t.target.checked})})}catch(n){console.error("Failed to update task:",n.message)}}function h(t){if(!t.target.classList.contains("list-btn"))return;const r=t.target.closest(".list-item"),e=r.dataset.id;i(`${c}/${e}`,{method:"DELETE"}).then(()=>{r.remove()}).catch(n=>{console.error("Failed to delete task:",n.message)})}
//# sourceMappingURL=commonHelpers.js.map
